// Generated by CoffeeScript 1.7.1
(function() {
  var ClaraDoc, jade, methods, path;

  methods = require('methods');

  jade = require('jade');

  path = require('path');

  ClaraDoc = (function() {
    function ClaraDoc() {}

    ClaraDoc.Router = require('./router');

    ClaraDoc.rexToPath = function(rex, keys) {
      var arrayPaths, completePath, i, j, subPath;
      arrayPaths = rex.toString().split('\\/');
      subPath = "";
      i = j = 0;
      completePath = "/";
      while (i < arrayPaths.length) {
        subPath = arrayPaths[i];
        if (i === 0 || i >= arrayPaths.length - 2) {
          i++;
          continue;
        }
        if (subPath[0] === '(') {
          completePath += ':' + keys[j].name + "/";
          i++;
          j++;
        } else {
          completePath += subPath + "/";
        }
        i++;
      }
      completePath[completePath.length] = '';
      return completePath;
    };

    ClaraDoc.document = function(router) {
      var endpoint, m, metadata, paths, pathsT, realPath, rootPath, route, _i, _j, _k, _len, _len1, _len2;
      paths = [];
      console.log(router);
      for (_i = 0, _len = router.length; _i < _len; _i++) {
        route = router[_i];
        if (route.route != null) {
          endpoint = {
            path: route.route.path,
            method: []
          };
          methods = Object.keys(route.route.methods);
          for (_j = 0, _len1 = methods.length; _j < _len1; _j++) {
            m = methods[_j];
            metadata = route.route["_meta_" + m];
            if (!metadata) {
              endpoint.method.push({
                method: m,
                doc: null
              });
              continue;
            }
            endpoint.method.push({
              method: m,
              doc: {
                "in": metadata["in"],
                out: metadata.out,
                info: metadata.info
              }
            });
          }
          paths.push(endpoint);
          continue;
        }
        if (route.name === 'router') {
          rootPath = this.rexToPath(route.regexp, route.keys);
          pathsT = this.document(route.handle.stack);
          for (_k = 0, _len2 = pathsT.length; _k < _len2; _k++) {
            path = pathsT[_k];
            realPath = (rootPath + path.path).replace('//', '/');
            paths.push({
              path: realPath,
              method: path.method
            });
          }
        }
      }
      return paths;
    };

    ClaraDoc.fn = function(docs) {
      return function(req, res) {
        res.send(jade.renderFile(__dirname + '/view/API.jade', {
          endPoints: docs
        }));
        return console.log(__dirname + '/view/API.jade');
      };
    };

    ClaraDoc.generate = function(app) {
      var router;
      router = app._router.stack;
      return this.fn(this.document(router));
    };

    return ClaraDoc;

  })();

  module.exports = ClaraDoc;

}).call(this);

//# sourceMappingURL=index.map
